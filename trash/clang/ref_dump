
a.out:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <__abi_tag+0x21>
 2b8:	78 38                	js     2f2 <__abi_tag+0x2e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

00000000000002c4 <__abi_tag>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	10 00                	adc    %al,(%rax)
 2ca:	00 00                	add    %al,(%rax)
 2cc:	01 00                	add    %eax,(%rax)
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 00                	add    %al,(%rax)
 2d5:	00 00                	add    %al,(%rax)
 2d7:	00 03                	add    %al,(%rbx)
 2d9:	00 00                	add    %al,(%rax)
 2db:	00 02                	add    %al,(%rdx)
 2dd:	00 00                	add    %al,(%rax)
 2df:	00 00                	add    %al,(%rax)
 2e1:	00 00                	add    %al,(%rax)
	...

Disassembly of section .hash:

00000000000002e8 <.hash>:
 2e8:	03 00                	add    (%rax),%eax
 2ea:	00 00                	add    %al,(%rax)
 2ec:	08 00                	or     %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	06                   	(bad)  
 2f1:	00 00                	add    %al,(%rax)
 2f3:	00 07                	add    %al,(%rdi)
 2f5:	00 00                	add    %al,(%rax)
 2f7:	00 02                	add    %al,(%rdx)
	...
 301:	00 00                	add    %al,(%rax)
 303:	00 01                	add    %al,(%rcx)
	...
 30d:	00 00                	add    %al,(%rax)
 30f:	00 04 00             	add    %al,(%rax,%rax,1)
 312:	00 00                	add    %al,(%rax)
 314:	03 00                	add    (%rax),%eax
 316:	00 00                	add    %al,(%rax)
 318:	05                   	.byte 0x5
 319:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000320 <.gnu.hash>:
 320:	01 00                	add    %eax,(%rax)
 322:	00 00                	add    %al,(%rax)
 324:	01 00                	add    %eax,(%rax)
 326:	00 00                	add    %al,(%rax)
 328:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

0000000000000340 <.dynsym>:
	...
 358:	57                   	push   %rdi
 359:	00 00                	add    %al,(%rax)
 35b:	00 12                	add    %dl,(%rdx)
	...
 36d:	00 00                	add    %al,(%rax)
 36f:	00 5e 00             	add    %bl,0x0(%rsi)
 372:	00 00                	add    %al,(%rax)
 374:	22 00                	and    (%rax),%al
	...
 386:	00 00                	add    %al,(%rax)
 388:	46 00 00             	rex.RX add %r8b,(%rax)
 38b:	00 12                	add    %dl,(%rdx)
	...
 39d:	00 00                	add    %al,(%rax)
 39f:	00 10                	add    %dl,(%rax)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 20                	add    %ah,(%rax)
	...
 3b5:	00 00                	add    %al,(%rax)
 3b7:	00 6d 00             	add    %ch,0x0(%rbp)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	12 00                	adc    (%rax),%al
	...
 3ce:	00 00                	add    %al,(%rax)
 3d0:	01 00                	add    %eax,(%rax)
 3d2:	00 00                	add    %al,(%rax)
 3d4:	20 00                	and    %al,(%rax)
	...
 3e6:	00 00                	add    %al,(%rax)
 3e8:	2c 00                	sub    $0x0,%al
 3ea:	00 00                	add    %al,(%rax)
 3ec:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000000400 <.dynstr>:
 400:	00 5f 5f             	add    %bl,0x5f(%rdi)
 403:	67 6d                	insl   (%dx),%es:(%edi)
 405:	6f                   	outsl  %ds:(%rsi),(%dx)
 406:	6e                   	outsb  %ds:(%rsi),(%dx)
 407:	5f                   	pop    %rdi
 408:	73 74                	jae    47e <__abi_tag+0x1ba>
 40a:	61                   	(bad)  
 40b:	72 74                	jb     481 <__abi_tag+0x1bd>
 40d:	5f                   	pop    %rdi
 40e:	5f                   	pop    %rdi
 40f:	00 5f 49             	add    %bl,0x49(%rdi)
 412:	54                   	push   %rsp
 413:	4d 5f                	rex.WRB pop %r15
 415:	64 65 72 65          	fs gs jb 47e <__abi_tag+0x1ba>
 419:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 420:	4d 
 421:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 423:	6f                   	outsl  %ds:(%rsi),(%dx)
 424:	6e                   	outsb  %ds:(%rsi),(%dx)
 425:	65 54                	gs push %rsp
 427:	61                   	(bad)  
 428:	62                   	(bad)  
 429:	6c                   	insb   (%dx),%es:(%rdi)
 42a:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 42e:	54                   	push   %rsp
 42f:	4d 5f                	rex.WRB pop %r15
 431:	72 65                	jb     498 <__abi_tag+0x1d4>
 433:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 43a:	4d 
 43b:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 43d:	6f                   	outsl  %ds:(%rsi),(%dx)
 43e:	6e                   	outsb  %ds:(%rsi),(%dx)
 43f:	65 54                	gs push %rsp
 441:	61                   	(bad)  
 442:	62                   	(bad)  
 443:	6c                   	insb   (%dx),%es:(%rdi)
 444:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 448:	73 74                	jae    4be <__abi_tag+0x1fa>
 44a:	61                   	(bad)  
 44b:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 44e:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 451:	5f                   	pop    %rdi
 452:	66 61                	data16 (bad) 
 454:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 45b:	74 
 45c:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
 460:	63 78 61             	movsxd 0x61(%rax),%edi
 463:	5f                   	pop    %rdi
 464:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 46a:	7a 65                	jp     4d1 <__abi_tag+0x20d>
 46c:	00 5f 5f             	add    %bl,0x5f(%rdi)
 46f:	6c                   	insb   (%dx),%es:(%rdi)
 470:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 477:	72 74                	jb     4ed <__abi_tag+0x229>
 479:	5f                   	pop    %rdi
 47a:	6d                   	insl   (%dx),%es:(%rdi)
 47b:	61                   	(bad)  
 47c:	69 6e 00 6c 69 62 73 	imul   $0x7362696c,0x0(%rsi),%ebp
 483:	74 64                	je     4e9 <__abi_tag+0x225>
 485:	63 2b                	movsxd (%rbx),%ebp
 487:	2b 2e                	sub    (%rsi),%ebp
 489:	73 6f                	jae    4fa <__abi_tag+0x236>
 48b:	2e 36 00 6c 69 62    	cs add %ch,%ss:0x62(%rcx,%rbp,2)
 491:	6d                   	insl   (%dx),%es:(%rdi)
 492:	2e 73 6f             	jae,pn 504 <__abi_tag+0x240>
 495:	2e 36 00 6c 69 62    	cs add %ch,%ss:0x62(%rcx,%rbp,2)
 49b:	67 63 63 5f          	movsxd 0x5f(%ebx),%esp
 49f:	73 2e                	jae    4cf <__abi_tag+0x20b>
 4a1:	73 6f                	jae    512 <__abi_tag+0x24e>
 4a3:	2e 31 00             	xor    %eax,%cs:(%rax)
 4a6:	6c                   	insb   (%dx),%es:(%rdi)
 4a7:	69 62 63 2e 73 6f 2e 	imul   $0x2e6f732e,0x63(%rdx),%esp
 4ae:	36 00 47 4c          	add    %al,%ss:0x4c(%rdi)
 4b2:	49                   	rex.WB
 4b3:	42                   	rex.X
 4b4:	43 5f                	rex.XB pop %r15
 4b6:	32 2e                	xor    (%rsi),%ch
 4b8:	34 00                	xor    $0x0,%al
 4ba:	47                   	rex.RXB
 4bb:	4c                   	rex.WR
 4bc:	49                   	rex.WB
 4bd:	42                   	rex.X
 4be:	43 5f                	rex.XB pop %r15
 4c0:	32 2e                	xor    (%rsi),%ch
 4c2:	32 2e                	xor    (%rsi),%ch
 4c4:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

00000000000004c6 <.gnu.version>:
 4c6:	00 00                	add    %al,(%rax)
 4c8:	02 00                	add    (%rax),%al
 4ca:	02 00                	add    (%rax),%al
 4cc:	03 00                	add    (%rax),%eax
 4ce:	00 00                	add    %al,(%rax)
 4d0:	02 00                	add    (%rax),%al
 4d2:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.version_r:

00000000000004d8 <.gnu.version_r>:
 4d8:	01 00                	add    %eax,(%rax)
 4da:	02 00                	add    (%rax),%al
 4dc:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 10                	add    %dl,(%rax)
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 4ea:	69 0d 00 00 03 00 b0 	imul   $0xb0,0x30000(%rip),%ecx        # 304f4 <_end+0x2c4b4>
 4f1:	00 00 00 
 4f4:	10 00                	adc    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	75 1a                	jne    514 <__abi_tag+0x250>
 4fa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 500:	ba 00 00 00 00       	mov    $0x0,%edx
 505:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000508 <.rela.dyn>:
 508:	a8 3d                	test   $0x3d,%al
 50a:	00 00                	add    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	08 00                	or     %al,(%rax)
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	40 11 00             	rex adc %eax,(%rax)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 b0 3d 00 00 00    	add    %dh,0x3d(%rax)
 525:	00 00                	add    %al,(%rax)
 527:	00 08                	add    %cl,(%rax)
 529:	00 00                	add    %al,(%rax)
 52b:	00 00                	add    %al,(%rax)
 52d:	00 00                	add    %al,(%rax)
 52f:	00 f0                	add    %dh,%al
 531:	10 00                	adc    %al,(%rax)
 533:	00 00                	add    %al,(%rax)
 535:	00 00                	add    %al,(%rax)
 537:	00 30                	add    %dh,(%rax)
 539:	40 00 00             	add    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	08 00                	or     %al,(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	30 40 00             	xor    %al,0x0(%rax)
 54b:	00 00                	add    %al,(%rax)
 54d:	00 00                	add    %al,(%rax)
 54f:	00 d8                	add    %bl,%al
 551:	3f                   	(bad)  
 552:	00 00                	add    %al,(%rax)
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	06                   	(bad)  
 559:	00 00                	add    %al,(%rax)
 55b:	00 02                	add    %al,(%rdx)
	...
 565:	00 00                	add    %al,(%rax)
 567:	00 e0                	add    %ah,%al
 569:	3f                   	(bad)  
 56a:	00 00                	add    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	06                   	(bad)  
 571:	00 00                	add    %al,(%rax)
 573:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 57e:	00 00                	add    %al,(%rax)
 580:	e8 3f 00 00 00       	callq  5c4 <__abi_tag+0x300>
 585:	00 00                	add    %al,(%rax)
 587:	00 06                	add    %al,(%rsi)
 589:	00 00                	add    %al,(%rax)
 58b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 591 <__abi_tag+0x2cd>
 591:	00 00                	add    %al,(%rax)
 593:	00 00                	add    %al,(%rax)
 595:	00 00                	add    %al,(%rax)
 597:	00 f0                	add    %dh,%al
 599:	3f                   	(bad)  
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	06                   	(bad)  
 5a1:	00 00                	add    %al,(%rax)
 5a3:	00 06                	add    %al,(%rsi)
	...
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 f8                	add    %bh,%al
 5b1:	3f                   	(bad)  
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	06                   	(bad)  
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

00000000000005c8 <.rela.plt>:
 5c8:	18 40 00             	sbb    %al,0x0(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 07                	add    %al,(%rdi)
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 01                	add    %al,(%rcx)
	...
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 20                	add    %ah,(%rax)
 5e1:	40 00 00             	add    %al,(%rax)
 5e4:	00 00                	add    %al,(%rax)
 5e6:	00 00                	add    %al,(%rax)
 5e8:	07                   	(bad)  
 5e9:	00 00                	add    %al,(%rax)
 5eb:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 e1 2f 00 00 	mov    0x2fe1(%rip),%rax        # 3ff0 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <__stack_chk_fail@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <__stack_chk_fail@GLIBC_2.4>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .text:

0000000000001050 <_start>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	31 ed                	xor    %ebp,%ebp
    1056:	49 89 d1             	mov    %rdx,%r9
    1059:	5e                   	pop    %rsi
    105a:	48 89 e2             	mov    %rsp,%rdx
    105d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1061:	50                   	push   %rax
    1062:	54                   	push   %rsp
    1063:	4c 8d 05 e6 01 00 00 	lea    0x1e6(%rip),%r8        # 1250 <__libc_csu_fini>
    106a:	48 8d 0d 6f 01 00 00 	lea    0x16f(%rip),%rcx        # 11e0 <__libc_csu_init>
    1071:	48 8d 3d d8 00 00 00 	lea    0xd8(%rip),%rdi        # 1150 <main>
    1078:	ff 15 6a 2f 00 00    	callq  *0x2f6a(%rip)        # 3fe8 <__libc_start_main@GLIBC_2.2.5>
    107e:	f4                   	hlt    
    107f:	90                   	nop

0000000000001080 <deregister_tm_clones>:
    1080:	48 8d 3d b1 2f 00 00 	lea    0x2fb1(%rip),%rdi        # 4038 <__TMC_END__>
    1087:	48 8d 05 aa 2f 00 00 	lea    0x2faa(%rip),%rax        # 4038 <__TMC_END__>
    108e:	48 39 f8             	cmp    %rdi,%rax
    1091:	74 15                	je     10a8 <deregister_tm_clones+0x28>
    1093:	48 8b 05 46 2f 00 00 	mov    0x2f46(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable>
    109a:	48 85 c0             	test   %rax,%rax
    109d:	74 09                	je     10a8 <deregister_tm_clones+0x28>
    109f:	ff e0                	jmpq   *%rax
    10a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10a8:	c3                   	retq   
    10a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 81 2f 00 00 	lea    0x2f81(%rip),%rdi        # 4038 <__TMC_END__>
    10b7:	48 8d 35 7a 2f 00 00 	lea    0x2f7a(%rip),%rsi        # 4038 <__TMC_END__>
    10be:	48 29 fe             	sub    %rdi,%rsi
    10c1:	48 89 f0             	mov    %rsi,%rax
    10c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10c8:	48 c1 f8 03          	sar    $0x3,%rax
    10cc:	48 01 c6             	add    %rax,%rsi
    10cf:	48 d1 fe             	sar    %rsi
    10d2:	74 14                	je     10e8 <register_tm_clones+0x38>
    10d4:	48 8b 05 1d 2f 00 00 	mov    0x2f1d(%rip),%rax        # 3ff8 <_ITM_registerTMCloneTable>
    10db:	48 85 c0             	test   %rax,%rax
    10de:	74 08                	je     10e8 <register_tm_clones+0x38>
    10e0:	ff e0                	jmpq   *%rax
    10e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <__do_global_dtors_aux>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	80 3d 3d 2f 00 00 00 	cmpb   $0x0,0x2f3d(%rip)        # 4038 <__TMC_END__>
    10fb:	75 33                	jne    1130 <__do_global_dtors_aux+0x40>
    10fd:	55                   	push   %rbp
    10fe:	48 83 3d d2 2e 00 00 	cmpq   $0x0,0x2ed2(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1105:	00 
    1106:	48 89 e5             	mov    %rsp,%rbp
    1109:	74 0d                	je     1118 <__do_global_dtors_aux+0x28>
    110b:	48 8b 3d 1e 2f 00 00 	mov    0x2f1e(%rip),%rdi        # 4030 <__dso_handle>
    1112:	ff 15 c0 2e 00 00    	callq  *0x2ec0(%rip)        # 3fd8 <__cxa_finalize@GLIBC_2.2.5>
    1118:	e8 63 ff ff ff       	callq  1080 <deregister_tm_clones>
    111d:	c6 05 14 2f 00 00 01 	movb   $0x1,0x2f14(%rip)        # 4038 <__TMC_END__>
    1124:	5d                   	pop    %rbp
    1125:	c3                   	retq   
    1126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    112d:	00 00 00 
    1130:	c3                   	retq   
    1131:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    1138:	00 00 00 00 
    113c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 67 ff ff ff       	jmpq   10b0 <register_tm_clones>
    1149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001150 <main>:
    1150:	55                   	push   %rbp
    1151:	48 89 e5             	mov    %rsp,%rbp
    1154:	48 83 ec 30          	sub    $0x30,%rsp
    1158:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    115f:	00 00 
    1161:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1165:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    116c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    1173:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    1177:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    117b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    117f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1183:	8b 70 04             	mov    0x4(%rax),%esi
    1186:	48 8d 3d 77 0e 00 00 	lea    0xe77(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    118d:	31 c9                	xor    %ecx,%ecx
    118f:	88 c8                	mov    %cl,%al
    1191:	88 4d df             	mov    %cl,-0x21(%rbp)
    1194:	e8 97 fe ff ff       	callq  1030 <printf@plt>
    1199:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    119d:	48 8d 3d 63 0e 00 00 	lea    0xe63(%rip),%rdi        # 2007 <_IO_stdin_used+0x7>
    11a4:	8a 4d df             	mov    -0x21(%rbp),%cl
    11a7:	89 45 d8             	mov    %eax,-0x28(%rbp)
    11aa:	88 c8                	mov    %cl,%al
    11ac:	e8 7f fe ff ff       	callq  1030 <printf@plt>
    11b1:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
    11b8:	00 00 
    11ba:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    11be:	48 39 f2             	cmp    %rsi,%rdx
    11c1:	0f 85 08 00 00 00    	jne    11cf <main+0x7f>
    11c7:	31 c0                	xor    %eax,%eax
    11c9:	48 83 c4 30          	add    $0x30,%rsp
    11cd:	5d                   	pop    %rbp
    11ce:	c3                   	retq   
    11cf:	e8 6c fe ff ff       	callq  1040 <__stack_chk_fail@plt>
    11d4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    11db:	00 00 00 
    11de:	66 90                	xchg   %ax,%ax

00000000000011e0 <__libc_csu_init>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	41 57                	push   %r15
    11e6:	4c 8d 3d bb 2b 00 00 	lea    0x2bbb(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    11ed:	41 56                	push   %r14
    11ef:	49 89 d6             	mov    %rdx,%r14
    11f2:	41 55                	push   %r13
    11f4:	49 89 f5             	mov    %rsi,%r13
    11f7:	41 54                	push   %r12
    11f9:	41 89 fc             	mov    %edi,%r12d
    11fc:	55                   	push   %rbp
    11fd:	48 8d 2d ac 2b 00 00 	lea    0x2bac(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1204:	53                   	push   %rbx
    1205:	4c 29 fd             	sub    %r15,%rbp
    1208:	48 83 ec 08          	sub    $0x8,%rsp
    120c:	e8 ef fd ff ff       	callq  1000 <_init>
    1211:	48 c1 fd 03          	sar    $0x3,%rbp
    1215:	74 1f                	je     1236 <__libc_csu_init+0x56>
    1217:	31 db                	xor    %ebx,%ebx
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1220:	4c 89 f2             	mov    %r14,%rdx
    1223:	4c 89 ee             	mov    %r13,%rsi
    1226:	44 89 e7             	mov    %r12d,%edi
    1229:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    122d:	48 83 c3 01          	add    $0x1,%rbx
    1231:	48 39 dd             	cmp    %rbx,%rbp
    1234:	75 ea                	jne    1220 <__libc_csu_init+0x40>
    1236:	48 83 c4 08          	add    $0x8,%rsp
    123a:	5b                   	pop    %rbx
    123b:	5d                   	pop    %rbp
    123c:	41 5c                	pop    %r12
    123e:	41 5d                	pop    %r13
    1240:	41 5e                	pop    %r14
    1242:	41 5f                	pop    %r15
    1244:	c3                   	retq   
    1245:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    124c:	00 00 00 00 

0000000000001250 <__libc_csu_fini>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	c3                   	retq   

Disassembly of section .fini:

0000000000001258 <_fini>:
    1258:	f3 0f 1e fa          	endbr64 
    125c:	48 83 ec 08          	sub    $0x8,%rsp
    1260:	48 83 c4 08          	add    $0x8,%rsp
    1264:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	25 64 00 25 70       	and    $0x70250064,%eax
	...

Disassembly of section .eh_frame_hdr:

000000000000200c <__GNU_EH_FRAME_HDR>:
    200c:	01 1b                	add    %ebx,(%rbx)
    200e:	03 3b                	add    (%rbx),%edi
    2010:	30 00                	xor    %al,(%rax)
    2012:	00 00                	add    %al,(%rax)
    2014:	05 00 00 00 14       	add    $0x14000000,%eax
    2019:	f0 ff                	lock (bad) 
    201b:	ff 64 00 00          	jmpq   *0x0(%rax,%rax,1)
    201f:	00 44 f0 ff          	add    %al,-0x1(%rax,%rsi,8)
    2023:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
    2027:	00 44 f1 ff          	add    %al,-0x1(%rcx,%rsi,8)
    202b:	ff 8c 00 00 00 d4 f1 	decl   -0xe2c0000(%rax,%rax,1)
    2032:	ff                   	(bad)  
    2033:	ff b4 00 00 00 44 f2 	pushq  -0xdbc0000(%rax,%rax,1)
    203a:	ff                   	(bad)  
    203b:	ff                   	(bad)  
    203c:	fc                   	cld    
    203d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000002040 <__FRAME_END__-0xdc>:
    2040:	14 00                	adc    $0x0,%al
    2042:	00 00                	add    %al,(%rax)
    2044:	00 00                	add    %al,(%rax)
    2046:	00 00                	add    %al,(%rax)
    2048:	01 7a 52             	add    %edi,0x52(%rdx)
    204b:	00 01                	add    %al,(%rcx)
    204d:	78 10                	js     205f <__GNU_EH_FRAME_HDR+0x53>
    204f:	01 1b                	add    %ebx,(%rbx)
    2051:	0c 07                	or     $0x7,%al
    2053:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2059:	00 00                	add    %al,(%rax)
    205b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    205e:	00 00                	add    %al,(%rax)
    2060:	f0 ef                	lock out %eax,(%dx)
    2062:	ff                   	(bad)  
    2063:	ff 2f                	ljmp   *(%rdi)
    2065:	00 00                	add    %al,(%rax)
    2067:	00 00                	add    %al,(%rax)
    2069:	44 07                	rex.R (bad) 
    206b:	10 00                	adc    %al,(%rax)
    206d:	00 00                	add    %al,(%rax)
    206f:	00 24 00             	add    %ah,(%rax,%rax,1)
    2072:	00 00                	add    %al,(%rax)
    2074:	34 00                	xor    $0x0,%al
    2076:	00 00                	add    %al,(%rax)
    2078:	a8 ef                	test   $0xef,%al
    207a:	ff                   	(bad)  
    207b:	ff 30                	pushq  (%rax)
    207d:	00 00                	add    %al,(%rax)
    207f:	00 00                	add    %al,(%rax)
    2081:	0e                   	(bad)  
    2082:	10 46 0e             	adc    %al,0xe(%rsi)
    2085:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2088:	0b 77 08             	or     0x8(%rdi),%esi
    208b:	80 00 3f             	addb   $0x3f,(%rax)
    208e:	1a 3b                	sbb    (%rbx),%bh
    2090:	2a 33                	sub    (%rbx),%dh
    2092:	24 22                	and    $0x22,%al
    2094:	00 00                	add    %al,(%rax)
    2096:	00 00                	add    %al,(%rax)
    2098:	24 00                	and    $0x0,%al
    209a:	00 00                	add    %al,(%rax)
    209c:	5c                   	pop    %rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 b0 f0 ff ff 84    	add    %dh,-0x7b000010(%rax)
    20a5:	00 00                	add    %al,(%rax)
    20a7:	00 00                	add    %al,(%rax)
    20a9:	41 0e                	rex.B (bad) 
    20ab:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    20b1:	02 7a 0c             	add    0xc(%rdx),%bh
    20b4:	07                   	(bad)  
    20b5:	08 41 0c             	or     %al,0xc(%rcx)
    20b8:	06                   	(bad)  
    20b9:	10 00                	adc    %al,(%rax)
    20bb:	00 00                	add    %al,(%rax)
    20bd:	00 00                	add    %al,(%rax)
    20bf:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    20c3:	00 84 00 00 00 18 f1 	add    %al,-0xee80000(%rax,%rax,1)
    20ca:	ff                   	(bad)  
    20cb:	ff 65 00             	jmpq   *0x0(%rbp)
    20ce:	00 00                	add    %al,(%rax)
    20d0:	00 46 0e             	add    %al,0xe(%rsi)
    20d3:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    20d9:	8e 03                	mov    (%rbx),%es
    20db:	45 0e                	rex.RB (bad) 
    20dd:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    20e3:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302f2d <_end+0xffffffff862feeed>
    20e9:	06                   	(bad)  
    20ea:	48 0e                	rex.W (bad) 
    20ec:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    20f2:	6e                   	outsb  %ds:(%rsi),(%dx)
    20f3:	0e                   	(bad)  
    20f4:	38 41 0e             	cmp    %al,0xe(%rcx)
    20f7:	30 41 0e             	xor    %al,0xe(%rcx)
    20fa:	28 42 0e             	sub    %al,0xe(%rdx)
    20fd:	20 42 0e             	and    %al,0xe(%rdx)
    2100:	18 42 0e             	sbb    %al,0xe(%rdx)
    2103:	10 42 0e             	adc    %al,0xe(%rdx)
    2106:	08 00                	or     %al,(%rax)
    2108:	10 00                	adc    %al,(%rax)
    210a:	00 00                	add    %al,(%rax)
    210c:	cc                   	int3   
    210d:	00 00                	add    %al,(%rax)
    210f:	00 40 f1             	add    %al,-0xf(%rax)
    2112:	ff                   	(bad)  
    2113:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2119 <__GNU_EH_FRAME_HDR+0x10d>
    2119:	00 00                	add    %al,(%rax)
	...

000000000000211c <__FRAME_END__>:
    211c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003da8 <__frame_dummy_init_array_entry>:
    3da8:	40 11 00             	rex adc %eax,(%rax)
    3dab:	00 00                	add    %al,(%rax)
    3dad:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003db0 <__do_global_dtors_aux_fini_array_entry>:
    3db0:	f0 10 00             	lock adc %al,(%rax)
    3db3:	00 00                	add    %al,(%rax)
    3db5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003db8 <_DYNAMIC>:
    3db8:	01 00                	add    %eax,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	7f 00                	jg     3dc2 <_DYNAMIC+0xa>
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	8e 00                	mov    (%rax),%es
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	01 00                	add    %eax,(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	98                   	cwtl   
    3de1:	00 00                	add    %al,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 01                	add    %al,(%rcx)
    3de9:	00 00                	add    %al,(%rax)
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 a6 00 00 00 00    	add    %ah,0x0(%rsi)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	00 10                	add    %dl,(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	0d 00 00 00 00       	or     $0x0,%eax
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 58 12             	add    %bl,0x12(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	19 00                	sbb    %eax,(%rax)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	a8 3d                	test   $0x3d,%al
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	1b 00                	sbb    (%rax),%eax
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	08 00                	or     %al,(%rax)
    3e32:	00 00                	add    %al,(%rax)
    3e34:	00 00                	add    %al,(%rax)
    3e36:	00 00                	add    %al,(%rax)
    3e38:	1a 00                	sbb    (%rax),%al
    3e3a:	00 00                	add    %al,(%rax)
    3e3c:	00 00                	add    %al,(%rax)
    3e3e:	00 00                	add    %al,(%rax)
    3e40:	b0 3d                	mov    $0x3d,%al
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	1c 00                	sbb    $0x0,%al
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	08 00                	or     %al,(%rax)
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	04 00                	add    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	e8 02 00 00 00       	callq  3e67 <_DYNAMIC+0xaf>
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 f5                	add    %dh,%ch
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 20                	add    %ah,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0xc5>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 00                	add    %al,(%rax)
    3e81:	04 00                	add    $0x0,%al
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 06                	add    %al,(%rsi)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 40 03             	add    %al,0x3(%rax)
    3e92:	00 00                	add    %al,(%rax)
    3e94:	00 00                	add    %al,(%rax)
    3e96:	00 00                	add    %al,(%rax)
    3e98:	0a 00                	or     (%rax),%al
    3e9a:	00 00                	add    %al,(%rax)
    3e9c:	00 00                	add    %al,(%rax)
    3e9e:	00 00                	add    %al,(%rax)
    3ea0:	c6 00 00             	movb   $0x0,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0x105>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	30 00                	xor    %al,(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	14 00                	adc    $0x0,%al
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 c8                	add    %cl,%al
    3f01:	05 00 00 00 00       	add    $0x0,%eax
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 08                	add    %cl,(%rax)
    3f11:	05 00 00 00 00       	add    $0x0,%eax
    3f16:	00 00                	add    %al,(%rax)
    3f18:	08 00                	or     %al,(%rax)
    3f1a:	00 00                	add    %al,(%rax)
    3f1c:	00 00                	add    %al,(%rax)
    3f1e:	00 00                	add    %al,(%rax)
    3f20:	c0 00 00             	rolb   $0x0,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 d8                	add    %bl,%al
    3f51:	04 00                	add    $0x0,%al
    3f53:	00 00                	add    %al,(%rax)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 ff                	add    %bh,%bh
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 c6                	add    %al,%dh
    3f71:	04 00                	add    $0x0,%al
    3f73:	00 00                	add    %al,(%rax)
    3f75:	00 00                	add    %al,(%rax)
    3f77:	00 f9                	add    %bh,%cl
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	b8 3d 00 00 00       	mov    $0x3d,%eax
	...
    4015:	00 00                	add    %al,(%rax)
    4017:	00 36                	add    %dh,(%rsi)
    4019:	10 00                	adc    %al,(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004028 <__data_start>:
	...

0000000000004030 <__dso_handle>:
    4030:	30 40 00             	xor    %al,0x0(%rax)
    4033:	00 00                	add    %al,(%rax)
    4035:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004038 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	31 30                	xor    %esi,(%rax)
   d:	2e 32 2e             	xor    %cs:(%rsi),%ch
  10:	30 00                	xor    %al,(%rax)
  12:	63 6c 61 6e          	movsxd 0x6e(%rcx,%riz,2),%ebp
  16:	67 20 76 65          	and    %dh,0x65(%esi)
  1a:	72 73                	jb     8f <__abi_tag-0x235>
  1c:	69 6f 6e 20 31 31 2e 	imul   $0x2e313120,0x6e(%rdi),%ebp
  23:	30 2e                	xor    %ch,(%rsi)
  25:	30 00                	xor    %al,(%rax)
