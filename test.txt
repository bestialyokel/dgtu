#include <iostream>
using namespace std;

uint32_t clp2(uint32_t x) {
   x = x - 1;
   x = x | (x >> 1);
   x = x | (x >> 2);
   x = x | (x >> 4);
   x = x | (x >> 8);
   x = x | (x >> 16);
   return x + 1;
}

const uint SIZE = 256;
const uint BLOCK_SIZE = 8; 
const uint TYPES_AMOUNT = 5; //log2(SIZE/BLOCK_SIZE) = 5
unsigned char MEM[SIZE];

uint ALLOCATED;
uint TYPES_LIST[TYPES_AMOUNT];

uint allocate(uint size) {
    size = clp2(size);
    uint level = 0;
    while(!(size&(BLOCK_SIZE << level))) level++;
    uint amount = (1 << level);
    for (
}



int main() {
    TYPES_LIST[0] = 1; //  1 -> 0 0 -> 0 0 0 0 -> ... on INIT
    allocate(17);
}
